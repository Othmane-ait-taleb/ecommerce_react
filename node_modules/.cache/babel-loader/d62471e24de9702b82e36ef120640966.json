{"ast":null,"code":"'use strict';\n\nlet {\n  SourceMapConsumer,\n  SourceMapGenerator\n} = require('source-map-js');\n\nlet {\n  dirname,\n  resolve,\n  relative,\n  sep\n} = require('path');\n\nlet {\n  pathToFileURL\n} = require('url');\n\nlet Input = require('./input');\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\nlet pathAvailable = Boolean(dirname && resolve && relative && sep);\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify;\n    this.mapOpts = opts.map || {};\n    this.root = root;\n    this.opts = opts;\n    this.css = cssString;\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute;\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map;\n    }\n\n    return this.previous().length > 0;\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = [];\n\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map;\n\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map);\n            }\n          }\n        });\n      } else {\n        let input = new Input(this.css, this.opts);\n        if (input.map) this.previousMaps.push(input.map);\n      }\n    }\n\n    return this.previousMaps;\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline;\n    }\n\n    let annotation = this.mapOpts.annotation;\n\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false;\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline);\n    }\n\n    return true;\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent;\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent());\n    }\n\n    return true;\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return;\n\n    if (this.root) {\n      let node;\n\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i];\n        if (node.type !== 'comment') continue;\n\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i);\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '');\n    }\n  }\n\n  setSourcesContent() {\n    let already = {};\n\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from;\n\n          if (from && !already[from]) {\n            already[from] = true;\n            let fromUrl = this.usesFileUrls ? this.toFileUrl(from) : this.toUrl(this.path(from));\n            this.map.setSourceContent(fromUrl, node.source.input.css);\n          }\n        }\n      });\n    } else if (this.css) {\n      let from = this.opts.from ? this.toUrl(this.path(this.opts.from)) : '<no source>';\n      this.map.setSourceContent(from, this.css);\n    }\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file));\n      let root = prev.root || dirname(prev.file);\n      let map;\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text);\n\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null);\n        }\n      } else {\n        map = prev.consumer();\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)));\n    }\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true;\n    }\n\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation;\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation);\n    }\n\n    return true;\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64');\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)));\n    }\n  }\n\n  addAnnotation() {\n    let content;\n\n    if (this.isInline()) {\n      content = 'data:application/json;base64,' + this.toBase64(this.map.toString());\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation;\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root);\n    } else {\n      content = this.outputFile() + '.map';\n    }\n\n    let eol = '\\n';\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n';\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */';\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to);\n    } else if (this.opts.from) {\n      return this.path(this.opts.from);\n    } else {\n      return 'to.css';\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString();\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer();\n      prev.file = this.outputFile();\n      this.map = SourceMapGenerator.fromSourceMap(prev);\n    } else {\n      this.map = new SourceMapGenerator({\n        file: this.outputFile()\n      });\n      this.map.addMapping({\n        source: this.opts.from ? this.toUrl(this.path(this.opts.from)) : '<no source>',\n        generated: {\n          line: 1,\n          column: 0\n        },\n        original: {\n          line: 1,\n          column: 0\n        }\n      });\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent();\n    if (this.root && this.previous().length > 0) this.applyPrevMaps();\n    if (this.isAnnotation()) this.addAnnotation();\n\n    if (this.isInline()) {\n      return [this.css];\n    } else {\n      return [this.css, this.map];\n    }\n  }\n\n  path(file) {\n    if (file.indexOf('<') === 0) return file;\n    if (/^\\w+:\\/\\//.test(file)) return file;\n    if (this.mapOpts.absolute) return file;\n    let from = this.opts.to ? dirname(this.opts.to) : '.';\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation));\n    }\n\n    file = relative(from, file);\n    return file;\n  }\n\n  toUrl(path) {\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/');\n    }\n\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent);\n  }\n\n  toFileUrl(path) {\n    if (pathToFileURL) {\n      return pathToFileURL(path).toString();\n    } else {\n      throw new Error('`map.absolute` option is not available in this PostCSS build');\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from);\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from);\n    } else {\n      return this.toUrl(this.path(node.source.input.from));\n    }\n  }\n\n  generateString() {\n    this.css = '';\n    this.map = new SourceMapGenerator({\n      file: this.outputFile()\n    });\n    let line = 1;\n    let column = 1;\n    let noSource = '<no source>';\n    let mapping = {\n      source: '',\n      generated: {\n        line: 0,\n        column: 0\n      },\n      original: {\n        line: 0,\n        column: 0\n      }\n    };\n    let lines, last;\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str;\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line;\n        mapping.generated.column = column - 1;\n\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node);\n          mapping.original.line = node.source.start.line;\n          mapping.original.column = node.source.start.column - 1;\n          this.map.addMapping(mapping);\n        } else {\n          mapping.source = noSource;\n          mapping.original.line = 1;\n          mapping.original.column = 0;\n          this.map.addMapping(mapping);\n        }\n      }\n\n      lines = str.match(/\\n/g);\n\n      if (lines) {\n        line += lines.length;\n        last = str.lastIndexOf('\\n');\n        column = str.length - last;\n      } else {\n        column += str.length;\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || {\n          raws: {}\n        };\n        let childless = node.type === 'decl' || node.type === 'atrule' && !node.nodes;\n\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node);\n            mapping.original.line = node.source.end.line;\n            mapping.original.column = node.source.end.column - 1;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 2;\n            this.map.addMapping(mapping);\n          } else {\n            mapping.source = noSource;\n            mapping.original.line = 1;\n            mapping.original.column = 0;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 1;\n            this.map.addMapping(mapping);\n          }\n        }\n      }\n    });\n  }\n\n  generate() {\n    this.clearAnnotation();\n\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap();\n    } else {\n      let result = '';\n      this.stringify(this.root, i => {\n        result += i;\n      });\n      return [result];\n    }\n  }\n\n}\n\nmodule.exports = MapGenerator;","map":{"version":3,"names":["SourceMapConsumer","SourceMapGenerator","require","dirname","resolve","relative","sep","pathToFileURL","Input","sourceMapAvailable","Boolean","pathAvailable","MapGenerator","constructor","stringify","root","opts","cssString","mapOpts","map","css","usesFileUrls","from","absolute","isMap","previous","length","previousMaps","walk","node","source","input","includes","push","isInline","inline","annotation","some","i","isSourcesContent","sourcesContent","withContent","clearAnnotation","nodes","type","text","indexOf","removeChild","replace","setSourcesContent","already","fromUrl","toFileUrl","toUrl","path","setSourceContent","applyPrevMaps","prev","file","consumer","applySourceMap","isAnnotation","toBase64","str","Buffer","toString","window","btoa","unescape","encodeURIComponent","addAnnotation","content","to","outputFile","eol","generateMap","generateString","fromSourceMap","addMapping","generated","line","column","original","test","encodeURI","Error","sourcePath","noSource","mapping","lines","last","start","match","lastIndexOf","p","parent","raws","childless","semicolon","end","generate","result","module","exports"],"sources":["/Users/otait-ta/Desktop/ecommerce_react/node_modules/postcss/lib/map-generator.js"],"sourcesContent":["'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, resolve, relative, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.css, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            let fromUrl = this.usesFileUrls\n              ? this.toFileUrl(from)\n              : this.toUrl(this.path(from))\n            this.map.setSourceContent(fromUrl, node.source.input.css)\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev)\n    } else {\n      this.map = new SourceMapGenerator({ file: this.outputFile() })\n      this.map.addMapping({\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>',\n        generated: { line: 1, column: 0 },\n        original: { line: 1, column: 0 }\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  path(file) {\n    if (file.indexOf('<') === 0) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    if (this.mapOpts.absolute) return file\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    file = relative(from, file)\n    return file\n  }\n\n  toUrl(path) {\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n  }\n\n  toFileUrl(path) {\n    if (pathToFileURL) {\n      return pathToFileURL(path).toString()\n    } else {\n      throw new Error(\n        '`map.absolute` option is not available in this PostCSS build'\n      )\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from)\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      source: '',\n      generated: { line: 0, column: 0 },\n      original: { line: 0, column: 0 }\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        let childless =\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes)\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n}\n\nmodule.exports = MapGenerator\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}